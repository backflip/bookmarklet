#!/usr/bin/env node

var path = require('path'),
    fs = require('fs'),
    bookmarklet = require('../bookmarklet');


//
// Input parsing
//

var args = process.argv.slice(2);

function help() {
    console.error(['Bookmarklet v' + bookmarklet.version.join('.') +
                   ' usage: bookmarklet source [destination]',
                   '',
                   'source      - path to file to read from or `-` for stdin',
                   'destination - path to file to write to',
                   '',
                   'More info: https://github.com/mrcoles/bookmarklet'
                  ].join('\n') + '\n');
}

function die(msg) {
    msg && console.error('[ERROR] bookmarklet: ' + msg);
    process.exit(1);
}

function warn(msg) {
    console.error('[WARN] bookmarklet: ' + msg);
}

if (args.length == 0 || args.filter(arg => arg == '-h' || arg == '--help').length) {
    help();
    process.exit(0);
}

if (args.length > 2) {
    die('invalid arguments, run with --help to see usage.\n\n');
}

var source = args[0],
    destination = args[1];

if (source && source[0] != '/' && source != '-') {
    source = path.join(process.cwd(), source);
}
if (destination && destination[0] != '/') {
    destination = path.join(process.cwd(), destination);
}


//
// Main
//

function dataCallback(e, data) {
    if (e) {
        die(e.message);
    }

    data = bookmarklet.parseFile(data);

    if (data.errors) {
        die(data.errors.join('\n'));
    }

    var code = bookmarklet.convert(data.code, data.options);
    if (destination) {
        fs.writeFileSync(destination, code);
    } else {
        console.log(code);
    }
};

if (source != '-') {
    fs.readFile(source, 'utf8', dataCallback);
} else {
    process.stdin.resume();
    process.stdin.setEncoding('utf8');

    var buffer = '';
    process.stdin.on('data', data => buffer += data);
    process.stdin.on('end', () => dataCallback(false, buffer));
}
